{"ast":null,"code":"import _asyncToGenerator from \"/home/haider/Desktop/Projects/clips/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nexport class AuthService {\n  constructor(auth, db) {\n    this.auth = auth;\n    this.db = db;\n  }\n\n  createUser(userData) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const userCred = yield _this.auth.createUserWithEmailAndPassword(userData.email, userData.password);\n      yield _this.db.collection(\"users\").add({\n        name: userData.name,\n        age: userData.age,\n        email: userData.email,\n        phoneNumber: userData.phoneNumber\n      });\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.AngularFirestore));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/haider/Desktop/Projects/clips/src/app/services/auth.service.ts"],"names":["i0","i1","i2","AuthService","constructor","auth","db","createUser","userData","userCred","createUserWithEmailAndPassword","email","password","collection","add","name","age","phoneNumber","ɵfac","AuthService_Factory","t","ɵɵinject","AngularFireAuth","AngularFirestore","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gCAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAW;AAClB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACH;;AACKC,EAAAA,UAAU,CAACC,QAAD,EAAW;AAAA;;AAAA;AACvB,YAAMC,QAAQ,SAAS,KAAI,CAACJ,IAAL,CAAUK,8BAAV,CAAyCF,QAAQ,CAACG,KAAlD,EAAyDH,QAAQ,CAACI,QAAlE,CAAvB;AACA,YAAM,KAAI,CAACN,EAAL,CAAQO,UAAR,CAAmB,OAAnB,EACDC,GADC,CACG;AACLC,QAAAA,IAAI,EAAEP,QAAQ,CAACO,IADV;AAELC,QAAAA,GAAG,EAAER,QAAQ,CAACQ,GAFT;AAGLL,QAAAA,KAAK,EAAEH,QAAQ,CAACG,KAHX;AAILM,QAAAA,WAAW,EAAET,QAAQ,CAACS;AAJjB,OADH,CAAN;AAFuB;AAS1B;;AAdoB;;AAgBzBd,WAAW,CAACe,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIjB,WAAV,EAAuBH,EAAE,CAACqB,QAAH,CAAYpB,EAAE,CAACqB,eAAf,CAAvB,EAAwDtB,EAAE,CAACqB,QAAH,CAAYnB,EAAE,CAACqB,gBAAf,CAAxD,CAAP;AAAmG,CAAxJ;;AACApB,WAAW,CAACqB,KAAZ,GAAoB,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEvB,WAAT;AAAsBwB,EAAAA,OAAO,EAAExB,WAAW,CAACe,IAA3C;AAAiDU,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nexport class AuthService {\n    constructor(auth, db) {\n        this.auth = auth;\n        this.db = db;\n    }\n    async createUser(userData) {\n        const userCred = await this.auth.createUserWithEmailAndPassword(userData.email, userData.password);\n        await this.db.collection(\"users\")\n            .add({\n            name: userData.name,\n            age: userData.age,\n            email: userData.email,\n            phoneNumber: userData.phoneNumber\n        });\n    }\n}\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.AngularFirestore)); };\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}